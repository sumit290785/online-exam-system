<?xml version="1.0"?>

<project name="online-exam" default="build" basedir="./">
	<property environment="env" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="conf.dir" value="${basedir}/config" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="proj.shortname" value="online-exam" />
	<property name="online-exam.home" value="${basedir}/WebContent" />
	<property name="lib.dir" value="${online-exam.home}/WEB-INF/lib" />
	<property name="db.dir" value="${online-exam.home}/db" />

	<path id="classpath">
		<fileset dir="${lib.dir}">
			<!--<include name="**/*.jar" />-->
		</fileset>
	</path>
	
    <patternset id="meta.files">
        <include name="**/*.xml"/>
    </patternset>

	<!-- You can change the build.dir to any folder as you like -->
	<property name="build.dir" value="${basedir}/build" />
	<!-- This is the online-exam folder which update the older one-->
	<property name="build.online-exam.dir" value="${build.dir}/online-exam" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.src" value="${build.dir}/src" />
	<property name="build.src.online-exam" value="${build.src}/online-exam" />
	<!--create the build dir.-->
	<target name="prepare" depends="clean">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.online-exam.dir}" />
		<mkdir dir="${build.classes.dir}" />

	</target>
	<!-- javac all the java files include the junit test case.-->
	<target name="javac" depends="prepare">
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="on" deprecation="off" optimize="off" includes="**">
			<classpath refid="classpath" />
		</javac>
		<javac srcdir="${test.dir}" destdir="${build.classes.dir}" debug="on" deprecation="off" optimize="off" includes="**">
			<classpath refid="classpath" />
		</javac>
	</target>
	
    <target name="copymetafiles" depends="prepare">
        <copy todir="${build.classes.dir}">
            <fileset dir="${conf.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>
    </target>

	<!-- auto all the unit test case pattern is **/*Test.* -->
	<target name="unit-test" depends="javac">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<pathelement path="${build.classes.dir}" />
			</classpath>
			<classpath refid="classpath" />
			<formatter type="plain" />
			<batchtest todir="${test.build.dir}">
				<fileset dir="${build.classes.dir}">
					<include name="**/*Test.*" />
				</fileset>
			</batchtest>

		</junit>
	</target>

	<!-- create the build.-->
	<target name="build" depends="javac,copymetafiles">
		<copydir src="${online-exam.home}" dest="${build.online-exam.dir}">
			<!--<include name="**/js/**.*" />
			<exclude name="WEB-INF/lib/**" />-->
			<exclude name="**/*Test.class" />
		</copydir>

		<copydir src="${build.classes.dir}" dest="${build.online-exam.dir}/WEB-INF/classes">
		</copydir>

	</target>



	<!-- clean the build folder-->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<!-- create the DB schema-->
	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="classpath" />

	<target name="schemaexport" depends="" description="Exports a generated schema to DB and file">

		<hibernatetool destdir="${build.online-exam.dir}">
			<classpath path="${build.online-exam.dir}/WEB-INF/classes" />
			<jpaconfiguration />
			<!-- Use META-INF/persistence.xml -->
			<hbm2ddl drop="true" create="true" export="true" outputfilename="db/${proj.shortname}-ddl.sql" delimiter=";" format="true" />
		</hibernatetool>
	</target>
	
	<!-- create the package.-->

	<target name="package class">
		<tar tarfile="${build.dir}/online-exam.tar" basedir="${build.online-exam.dir}" />
		<war warfile="${build.dir}/online-exam.war" webxml="${online-exam.home}/WEB-INF/web.xml" basedir="${build.online-exam.dir}" />
	</target>

	<target name="package source">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.src}" />
		<mkdir dir="${build.src.online-exam}" />
		<copydir src="${online-exam.home}" dest="${build.src.online-exam}">
			<exclude name="WEB-INF/lib/**" />
		</copydir>
		<copydir src="${src.dir}" dest="${build.src.online-exam}/WEB-INF/classes">
		</copydir>
		<zip destfile="${build.src}/online-exam-src.zip" basedir="${build.src}" />
	</target>

</project>


